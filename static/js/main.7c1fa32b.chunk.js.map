{"version":3,"sources":["components/Plate.js","actions/index.js","actions/ActionTypes.js","components/Button.js","components/Bingo.js","components/App.js","reducers/bingoReducer.js","reducers/index.js","index.js","store.js"],"names":["Plate","idx","value","key","flag","alert","this","props","leftCount","rightCount","_handleSelectPlate","state","_this","length","stateMerge","stateHtml","_loop","i","push","react_default","a","createElement","className","is_selected","undefined","onClick","_selectPlate","react","is_start","_makePlate","left","right","Component","connect","obj","bingoReducer","hasOwnProperty","Object","keys","dispatch","type","actions","Button","_startGame","_handleStartGame","_this2","Bingo","components_Button","components_Plate","App","components_Bingo","intialState","origin","COPY","JSON","parse","stringify","combineReducers","arguments","action","selectState","indexOf","forEach","v","startState","shuffleOrigin","getIdx","max","c","Math","floor","random","get_random","newArr","newLeft","newRight","concat","slice","shuffle","ReactDOM","render","es","store","log","window","location","host","logger","require","createStore","rootReducer","applyMiddleware","apply","configureStore","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.7c1fa32b.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nclass Plate extends Component{\r\n    _selectPlate (idx,value,key,flag) {\r\n        if(flag !== true){\r\n            if(key === \"leftCount\"){\r\n                if(this.props.leftCount > this.props.rightCount){\r\n                    return alert('잘못된 차례입니다.');\r\n                }\r\n            }else if(key === \"rightCount\"){\r\n                if(this.props.leftCount < this.props.rightCount){\r\n                    return alert('잘못된 차례입니다.');\r\n                }\r\n            }\r\n    \r\n            this.props._handleSelectPlate(idx, value, key);\r\n        }else{\r\n            return alert('이미 선택된 영역입니다.')\r\n        }\r\n    }\r\n\r\n    _makePlate(state, key) {\r\n        if(state.length){\r\n            let stateMerge = [];\r\n            let stateHtml = [];\r\n\r\n            for(let i = 0; i < state.length; i++){\r\n                if((i+1) % 5 === 0){\r\n                    stateHtml.push(\r\n                        <li className={state[i].is_selected ? \"selected\" : undefined} \r\n                            key={state[i].value}\r\n                            onClick={() => {state[i].is_selected ? this._selectPlate(i,state[i].value,key,true) : this._selectPlate(i,state[i].value,key,false) }}\r\n                        >\r\n                        {state[i].value}\r\n                        </li>\r\n                    );\r\n                    stateMerge.push(<ul key={i}>{stateHtml}</ul>)\r\n                    stateHtml = [];\r\n                }else{\r\n                    stateHtml.push(\r\n                        <li className={state[i].is_selected ? \"selected\" : undefined} \r\n                            key={state[i].value}\r\n                            onClick={() => {state[i].is_selected ? this._selectPlate(i,state[i].value,key,true) : this._selectPlate(i,state[i].value,key,false) }}\r\n                        >\r\n                        {state[i].value}\r\n                        </li>\r\n                    );\r\n                }\r\n            }\r\n            return stateMerge;\r\n        }        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <main>\r\n                    {this.props.is_start === false ? ( \r\n                        <section><p>게임을 시작해주세요</p></section>\r\n                    ) : ( \r\n                        <Fragment>\r\n                            <section className={\"plate\"}>\r\n                                <h3>Left</h3>\r\n                                {this._makePlate(this.props.left,\"leftCount\")}\r\n                            </section>\r\n                            <section className={\"plate\"}>\r\n                                <h3>Right</h3>\r\n                                {this._makePlate(this.props.right,\"rightCount\")}\r\n                            </section>\r\n                        </Fragment>\r\n                    )}\r\n                </main>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    _handleSelectPlate: (idx, value, key) => { dispatch(actions.selectPlate(idx, value,key)) }\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n    let obj = {};\r\n    for(let i in state.bingoReducer){\r\n         if(state.bingoReducer.hasOwnProperty(i)){\r\n            if(Object.keys(state.bingoReducer[i]).length){\r\n                obj[i] = state.bingoReducer[i] ? state.bingoReducer[i] : {};\r\n            }else{\r\n                obj[i] = state.bingoReducer[i]\r\n            }\r\n         }\r\n    }\r\n    return obj;\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Plate);\r\n  ","import * as types from './ActionTypes'\r\n\r\nexport const startGame = (is_start) => {\r\n  return{\r\n      type:types.START,\r\n      is_start: is_start\r\n  }\r\n}\r\n\r\nexport const selectPlate = (idx, value, key) => {\r\n  return{\r\n      type:types.SELECT,\r\n      idx:idx,\r\n      value: value,\r\n      key:key\r\n  }\r\n}","export const START = \"START\";\r\nexport const SELECT = \"SELECT\";","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nclass Button extends Component{\r\n    _startGame = (is_start) => {\r\n        this.props._handleStartGame(is_start);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <header>\r\n                    <h1>&#x1F3AE;빙고 게임</h1>\r\n                    <button className={this.props.is_start !== true ? \"game__start\" : \"game__restart\"} \r\n                        onClick={()=>{this._startGame(true)}}>\r\n                        {this.props.is_start !== true ? '게임 시작' : '게임 재시작'}\r\n                    </button>\r\n                </header>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    _handleStartGame: (is_start) => { dispatch(actions.startGame(is_start)) }\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n    let obj = {};\r\n    for(let i in state.bingoReducer){\r\n         if(state.bingoReducer.hasOwnProperty(i)){\r\n            if(Object.keys(state.bingoReducer[i]).length){\r\n                obj[i] = state.bingoReducer[i] ? state.bingoReducer[i] : {};\r\n            }else{\r\n                obj[i] = state.bingoReducer[i]\r\n            }\r\n         }\r\n    }\r\n    return obj;\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Button);\r\n  ","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Plate from './Plate';\r\nimport Button from './Button';\r\n\r\nclass Bingo extends Component{\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <Button />\r\n                <Plate />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    \r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n    let obj = {};\r\n    for(let i in state.bingoReducer){\r\n         if(state.bingoReducer.hasOwnProperty(i)){\r\n            if(Object.keys(state.bingoReducer[i]).length){\r\n                obj[i] = state.bingoReducer[i] ? state.bingoReducer[i] : {};\r\n            }else{\r\n                obj[i] = state.bingoReducer[i]\r\n            }\r\n         }\r\n    }\r\n    return obj;\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Bingo);\r\n  ","import React, { Component, Fragment } from 'react';\r\nimport '../sass/main.scss';\r\n\r\nimport Bingo from './Bingo';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Bingo />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const intialState = {\r\n  is_start:false,\r\n  left:[],\r\n  leftCount:0,\r\n  right:[],\r\n  rightCount:0,\r\n  origin:[\r\n    { value : 0, is_selected: false },\r\n    { value : 1, is_selected: false },\r\n    { value : 2, is_selected: false },\r\n    { value : 3, is_selected: false },\r\n    { value : 4, is_selected: false },\r\n    { value : 5, is_selected: false },\r\n    { value : 6, is_selected: false },\r\n    { value : 7, is_selected: false },\r\n    { value : 8, is_selected: false },\r\n    { value : 9, is_selected: false },\r\n    { value : 10, is_selected: false },\r\n    { value : 11, is_selected: false },\r\n    { value : 12, is_selected: false },\r\n    { value : 13, is_selected: false },\r\n    { value : 14, is_selected: false },\r\n    { value : 15, is_selected: false },\r\n    { value : 16, is_selected: false },\r\n    { value : 17, is_selected: false },\r\n    { value : 18, is_selected: false },\r\n    { value : 19, is_selected: false },\r\n    { value : 20, is_selected: false },\r\n    { value : 21, is_selected: false },\r\n    { value : 22, is_selected: false },\r\n    { value : 23, is_selected: false },\r\n    { value : 24, is_selected: false }\r\n  ]\r\n};\r\n\r\nconst COPY = (obj) => {\r\n  if (obj !== undefined && obj !== null) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport default (state = intialState, action) => { \r\n    switch (action.type) {\r\n      case 'SELECT':\r\n        var selectState = COPY(state);\r\n      \r\n        if(action.key.indexOf('left') !== -1){\r\n            selectState.left[action.idx].is_selected = true;\r\n            selectState.right.forEach((v) => {\r\n              if(v.value === action.value){\r\n                v.is_selected = true;\r\n              }\r\n            });\r\n        }else{\r\n          selectState.right[action.idx].is_selected = true;\r\n          selectState.left.forEach((v)=>{\r\n            if(v.value === action.value){\r\n              v.is_selected = true;\r\n            }\r\n          });\r\n        }\r\n\r\n        selectState[action.key] = selectState[action.key] + 1 \r\n        return selectState;\r\n      case 'START':\r\n        let startState = COPY(state);\r\n        const shuffle = (state) => {\r\n          const get_zero_or_one = () => {\r\n              return Math.floor((Math.random() * 2))\r\n          }\r\n          const get_random = (max) => {\r\n              if(max <= 1) return 0;\r\n              let v = 1;\r\n              let c = 0;\r\n              while(true){\r\n                  v = 2*v;\r\n                  c = 2*c + get_zero_or_one();\r\n                  if(v >= max){\r\n                      if(c < max) { return(c) }\r\n                      v = v - max;\r\n                      c = c - max;\r\n                  }\r\n              }\r\n          }        \r\n          let getIdx = get_random(state.length);        \r\n          let newArr = [];\r\n          let newLeft = [];\r\n          let newRight = [];\r\n          \r\n          newLeft = newLeft.concat(state.slice(getIdx, state.length),state.slice(0, getIdx));\r\n          newRight = newRight.concat(newLeft.slice(getIdx, newLeft.length),newLeft.slice(0, getIdx));\r\n          newArr.push(newLeft, newRight);\r\n          return newArr;\r\n        }\r\n\r\n        const shuffleOrigin = shuffle(startState.origin);\r\n        startState.is_start = action.is_start\r\n        startState.left = shuffleOrigin[0];\r\n        startState.right = shuffleOrigin[1];\r\n        startState.leftCount = 0;\r\n        startState.rightCount = 0;\r\n        return startState;\r\n      default:\r\n        return state\r\n    }\r\n  }","import { combineReducers } from 'redux';\r\nimport bingoReducer from './bingoReducer';\r\n\r\nexport default combineReducers({\r\n    bingoReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/index';\r\n\r\nexport default function configureStore(initialState={}) {\r\n  /* dev redux logger setting */\r\n  let log = [];\r\n  if(\r\n    window.location &&\r\n    window.location.host &&\r\n    window.location.host.indexOf('localhost') !== -1){\r\n      const { logger } = require(\"redux-logger\");\r\n      log.push(logger);\r\n  }\r\n  /* dev redux logger setting */\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    applyMiddleware(...log)\r\n  );\r\n}"],"sourceRoot":""}