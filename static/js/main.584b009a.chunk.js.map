{"version":3,"sources":["components/Plate.js","actions/index.js","actions/ActionTypes.js","components/Button.js","components/Bingo.js","components/App.js","reducers/bingoReducer.js","reducers/index.js","index.js","store.js"],"names":["Plate","idx","value","key","flag","alert","this","props","leftCount","rightCount","_handleSelectPlate","state","_this","length","stateMerge","stateHtml","_loop","i","push","react_default","a","createElement","className","is_selected","undefined","onClick","_selectPlate","react","is_start","_makePlate","left","right","Component","connect","obj","bingoReducer","hasOwnProperty","Object","keys","dispatch","type","actions","Button","_startGame","_handleStartGame","_this2","Bingo","components_Button","components_Plate","App","components_Bingo","intialState","origin","COPY","JSON","parse","stringify","combineReducers","arguments","action","selectState","indexOf","forEach","v","startState","shuffleOrigin","getIdx","max","c","Math","floor","random","get_random","newArr","newLeft","newRight","concat","slice","shuffle","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","logger","configureStore","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.584b009a.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\n\nclass Plate extends Component{\n    _selectPlate (idx,value,key,flag) {\n        if(flag !== true){\n            if(key === \"leftCount\"){\n                if(this.props.leftCount > this.props.rightCount){\n                    return alert('잘못된 차례입니다.');\n                }\n            }else if(key === \"rightCount\"){\n                if(this.props.leftCount < this.props.rightCount){\n                    return alert('잘못된 차례입니다.');\n                }\n            }\n    \n            this.props._handleSelectPlate(idx, value, key);\n        }else{\n            return alert('이미 선택된 영역입니다.')\n        }\n    }\n\n    _makePlate(state, key) {\n        if(state.length){\n            let stateMerge = [];\n            let stateHtml = [];\n\n            for(let i = 0; i < state.length; i++){\n                if((i+1) % 5 === 0){\n                    stateHtml.push(\n                        <li className={state[i].is_selected ? \"selected\" : undefined} \n                            key={state[i].value}\n                            onClick={() => {state[i].is_selected ? this._selectPlate(i,state[i].value,key,true) : this._selectPlate(i,state[i].value,key,false) }}\n                        >\n                        {state[i].value}\n                        </li>\n                    );\n                    stateMerge.push(<ul key={i}>{stateHtml}</ul>)\n                    stateHtml = [];\n                }else{\n                    stateHtml.push(\n                        <li className={state[i].is_selected ? \"selected\" : undefined} \n                            key={state[i].value}\n                            onClick={() => {state[i].is_selected ? this._selectPlate(i,state[i].value,key,true) : this._selectPlate(i,state[i].value,key,false) }}\n                        >\n                        {state[i].value}\n                        </li>\n                    );\n                }\n            }\n            return stateMerge;\n        }        \n    }\n\n    render(){\n        return(\n            <Fragment>\n                <main>\n                    {this.props.is_start === false ? ( \n                        <section><p>게임을 시작해주세요</p></section>\n                    ) : ( \n                        <Fragment>\n                            <section className={\"plate\"}>\n                                <h3>Left</h3>\n                                {this._makePlate(this.props.left,\"leftCount\")}\n                            </section>\n                            <section className={\"plate\"}>\n                                <h3>Right</h3>\n                                {this._makePlate(this.props.right,\"rightCount\")}\n                            </section>\n                        </Fragment>\n                    )}\n                </main>\n            </Fragment>\n        )\n    }\n}\n\n\n\nconst mapDispatchToProps = dispatch => ({\n    _handleSelectPlate: (idx, value, key) => { dispatch(actions.selectPlate(idx, value,key)) }\n})\n\nconst mapStateToProps = (state) => {\n    let obj = {};\n    for(let i in state.bingoReducer){\n         if(state.bingoReducer.hasOwnProperty(i)){\n            if(Object.keys(state.bingoReducer[i]).length){\n                obj[i] = state.bingoReducer[i] ? state.bingoReducer[i] : {};\n            }else{\n                obj[i] = state.bingoReducer[i]\n            }\n         }\n    }\n    return obj;\n};\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Plate);\n  ","import * as types from './ActionTypes'\n\nexport const startGame = (is_start) => {\n  return{\n      type:types.START,\n      is_start: is_start\n  }\n}\n\nexport const selectPlate = (idx, value, key) => {\n  return{\n      type:types.SELECT,\n      idx:idx,\n      value: value,\n      key:key\n  }\n}","export const START = \"START\";\nexport const SELECT = \"SELECT\";","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\n\nclass Button extends Component{\n    _startGame = (is_start) => {\n        this.props._handleStartGame(is_start);\n    }\n\n    render(){\n        return(\n            <Fragment>\n                <header>\n                    <button className={this.props.is_start !== true ? \"game__start\" : \"game__restart\"} \n                        onClick={()=>{this._startGame(true)}}>\n                        {this.props.is_start !== true ? '게임 시작' : '게임 재시작'}\n                    </button>\n                </header>\n            </Fragment>\n        )\n    }\n}\n\n\n\nconst mapDispatchToProps = dispatch => ({\n    _handleStartGame: (is_start) => { dispatch(actions.startGame(is_start)) }\n})\n\nconst mapStateToProps = (state) => {\n    let obj = {};\n    for(let i in state.bingoReducer){\n         if(state.bingoReducer.hasOwnProperty(i)){\n            if(Object.keys(state.bingoReducer[i]).length){\n                obj[i] = state.bingoReducer[i] ? state.bingoReducer[i] : {};\n            }else{\n                obj[i] = state.bingoReducer[i]\n            }\n         }\n    }\n    return obj;\n};\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Button);\n  ","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Plate from './Plate';\nimport Button from './Button';\n\nclass Bingo extends Component{\n    render(){\n        return(\n            <Fragment>\n                <Button />\n                <Plate />\n            </Fragment>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    \n})\n\nconst mapStateToProps = (state) => {\n    let obj = {};\n    for(let i in state.bingoReducer){\n         if(state.bingoReducer.hasOwnProperty(i)){\n            if(Object.keys(state.bingoReducer[i]).length){\n                obj[i] = state.bingoReducer[i] ? state.bingoReducer[i] : {};\n            }else{\n                obj[i] = state.bingoReducer[i]\n            }\n         }\n    }\n    return obj;\n};\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Bingo);\n  ","import React, { Component, Fragment } from 'react';\nimport '../sass/main.scss';\n\nimport Bingo from './Bingo';\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Bingo />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const intialState = {\n  is_start:false,\n  left:[],\n  leftCount:0,\n  right:[],\n  rightCount:0,\n  origin:[\n    { value : 0, is_selected: false },\n    { value : 1, is_selected: false },\n    { value : 2, is_selected: false },\n    { value : 3, is_selected: false },\n    { value : 4, is_selected: false },\n    { value : 5, is_selected: false },\n    { value : 6, is_selected: false },\n    { value : 7, is_selected: false },\n    { value : 8, is_selected: false },\n    { value : 9, is_selected: false },\n    { value : 10, is_selected: false },\n    { value : 11, is_selected: false },\n    { value : 12, is_selected: false },\n    { value : 13, is_selected: false },\n    { value : 14, is_selected: false },\n    { value : 15, is_selected: false },\n    { value : 16, is_selected: false },\n    { value : 17, is_selected: false },\n    { value : 18, is_selected: false },\n    { value : 19, is_selected: false },\n    { value : 20, is_selected: false },\n    { value : 21, is_selected: false },\n    { value : 22, is_selected: false },\n    { value : 23, is_selected: false },\n    { value : 24, is_selected: false }\n  ]\n};\n\nconst COPY = (obj) => {\n  if (obj !== undefined && obj !== null) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  return null;\n}\n\nexport default (state = intialState, action) => { \n    switch (action.type) {\n      case 'SELECT':\n        var selectState = COPY(state);\n      \n        if(action.key.indexOf('left') !== -1){\n            selectState.left[action.idx].is_selected = true;\n            selectState.right.forEach((v) => {\n              if(v.value === action.value){\n                v.is_selected = true;\n              }\n            });\n        }else{\n          selectState.right[action.idx].is_selected = true;\n          selectState.left.forEach((v)=>{\n            if(v.value === action.value){\n              v.is_selected = true;\n            }\n          });\n        }\n\n        selectState[action.key] = selectState[action.key] + 1 \n        return selectState;\n      case 'START':\n        let startState = COPY(state);\n        const shuffle = (state) => {\n          const get_zero_or_one = () => {\n              return Math.floor((Math.random() * 2))\n          }\n          const get_random = (max) => {\n              if(max <= 1) return 0;\n              let v = 1;\n              let c = 0;\n              while(true){\n                  v = 2*v;\n                  c = 2*c + get_zero_or_one();\n                  if(v >= max){\n                      if(c < max) { return(c) }\n                      v = v - max;\n                      c = c - max;\n                  }\n              }\n          }        \n          let getIdx = get_random(state.length);        \n          let newArr = [];\n          let newLeft = [];\n          let newRight = [];\n          \n          newLeft = newLeft.concat(state.slice(getIdx, state.length),state.slice(0, getIdx));\n          newRight = newRight.concat(newLeft.slice(getIdx, newLeft.length),newLeft.slice(0, getIdx));\n          newArr.push(newLeft, newRight);\n          return newArr;\n        }\n\n        const shuffleOrigin = shuffle(startState.origin);\n        startState.is_start = action.is_start\n        startState.left = shuffleOrigin[0];\n        startState.right = shuffleOrigin[1];\n        startState.leftCount = 0;\n        startState.rightCount = 0;\n        return startState;\n      default:\n        return state\n    }\n  }","import { combineReducers } from 'redux';\nimport bingoReducer from './bingoReducer';\n\nexport default combineReducers({\n    bingoReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/index';\nimport logger from 'redux-logger'\n\nexport default function configureStore(initialState={}) {\n  return createStore(\n    rootReducer,\n    applyMiddleware(logger)\n  );\n}"],"sourceRoot":""}